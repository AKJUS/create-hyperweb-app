import { MouseEventHandler } from "react";
import Head from "next/head";
import {
  Box,
  Divider,
  Grid,
  Heading,
  Text,
  Stack,
  Container,
  Icon,
  Flex,
  Button,
  useColorMode,
  useColorModeValue,
  Link,
} from "@chakra-ui/react";
import { BsFillMoonStarsFill, BsFillSunFill } from "react-icons/bs";
import { useWalletManager, useWallet } from "@cosmos-kit/react";
import {
  Connected,
  ConnectedUserInfo,
  Connecting,
  Disconnect,
  NotExist,
  Rejected,
  WalletConnectComponent,
  Astronaut,
  Dependency,
  Product,
} from "../components";
import { mapStatusFromCosmosWallet } from "../utils";
import { dependencies, products } from "../config";

export default function Home() {
  const { colorMode, toggleColorMode } = useColorMode();
  const { connect, disconnect } = useWalletManager();
  const { status, error, name, address } = useWallet();
  const walletStatus = mapStatusFromCosmosWallet(status, error as Error);

  const onClickConnect: MouseEventHandler = (e) => {
    e.preventDefault();
    connect();
  };

  const onClickDisconnect: MouseEventHandler = (e) => {
    e.preventDefault();
    disconnect();
  };

  const userInfoCard = name ? (
    <ConnectedUserInfo name={name} icon={<Astronaut />} />
  ) : (
    <></>
  );

  const connectWalletComponent = (
    <WalletConnectComponent
      walletStatus={walletStatus}
      disconnect={
        <Disconnect buttonText="Connect Wallet" onClick={onClickConnect} />
      }
      connecting={<Connecting />}
      connected={
        <Box display={{ base: "block", md: "flex" }}>
          <Box mr={{ lg: 8 }} mb={{ base: 4, md: 0 }}>
            {userInfoCard}
          </Box>
          <Connected buttonText="Disconnect" onClick={onClickDisconnect} />
        </Box>
      }
      rejected={
        <Rejected
          buttonText="Chain Rejected"
          wordOfWarning="There is not enough chain information to connect to this chain."
        />
      }
      notExist={<NotExist buttonText="Not Exist" />}
    />
  );

  return (
    <Container maxW="5xl" py={10}>
      <Head>
        <title>Create Cosmos App</title>
        <meta name="description" content="Generated by create cosmos app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Flex justifyContent="end" mb={4}>
        <Button variant="outline" px={0} onClick={toggleColorMode}>
          <Icon
            as={colorMode === "light" ? BsFillMoonStarsFill : BsFillSunFill}
          />
        </Button>
      </Flex>
      <Box>
        <Stack
          spacing={12}
          justifyContent="center"
          alignItems="center"
          textAlign="center"
          mb={14}
        >
          <Box>
            <Heading
              as="h1"
              fontSize={{ base: "3xl", sm: "4xl", md: "5xl" }}
              fontWeight="extrabold"
              mb={2}
            >
              Cosmos App Made Easy
            </Heading>
            <Heading
              as="h1"
              fontWeight="bold"
              fontSize={{ base: "2xl", sm: "3xl", md: "4xl" }}
            >
              <Text as="span">Welcome to&nbsp;</Text>
              <Text
                as="span"
                color={useColorModeValue("primary.500", "primary.200")}
              >
                CosmosKit.js + Telescope + Next.js
              </Text>
            </Heading>
          </Box>
          {connectWalletComponent}
        </Stack>
        <Grid
          templateColumns={{
            md: "repeat(2, 1fr)",
            lg: "repeat(3, 1fr)",
          }}
          gap={8}
          mb={14}
        >
          {products.map((product) => (
            <Product {...product} key={product.title}></Product>
          ))}
        </Grid>
        <Grid templateColumns={{ md: "1fr 1fr" }} gap={8} mb={20}>
          {dependencies.map((dependency) => (
            <Dependency {...dependency}></Dependency>
          ))}
        </Grid>
      </Box>
      <Box mb={3}>
        <Divider />
      </Box>
      <Stack
        isInline={true}
        spacing={1}
        justifyContent="center"
        opacity={0.5}
        fontSize="sm"
      >
        <Text>Powered by</Text>
        <Link
          href="https://cosmology.tech/"
          target="_blank"
          rel="noopener noreferrer"
        >
          @cosmology-tech
        </Link>
      </Stack>
    </Container>
  );
}
